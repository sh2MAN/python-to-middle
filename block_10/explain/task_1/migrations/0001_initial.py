# Generated by Django 3.2.13 on 2022-09-06 23:25

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('short_name', models.CharField(max_length=50, unique=True, verbose_name='Автор книги')),
            ],
            options={
                'verbose_name': 'Автор',
                'verbose_name_plural': 'Авторы',
                'db_table': 'library_author',
            },
        ),
        migrations.CreateModel(
            name='BookCard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название книги')),
                ('isbn', models.CharField(max_length=25, verbose_name='Номер')),
                ('number_pages', models.SmallIntegerField(verbose_name='Количество страниц')),
                ('date_publication', models.DateField(verbose_name='Дата публикации')),
                ('description', models.TextField(verbose_name='Описание')),
                ('author', models.ManyToManyField(related_name='books', to='explain_task_1.Author', verbose_name='Авторы')),
            ],
            options={
                'verbose_name': 'Книжная карточка',
                'verbose_name_plural': 'Книжные карточки',
                'db_table': 'library_bookcard',
            },
        ),
        migrations.CreateModel(
            name='Librarian',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Наименование')),
            ],
            options={
                'verbose_name': 'Библиотекарь',
                'verbose_name_plural': 'Библиотекари',
                'db_table': 'library_librarian',
            },
        ),
        migrations.CreateModel(
            name='LibraryHall',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=25, verbose_name='Наименование зала')),
                ('librarian', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='explain_task_1.librarian', verbose_name='Закрепленный библиотекарь')),
            ],
            options={
                'verbose_name': 'Библиотечный зал',
                'verbose_name_plural': 'Библиотечные залы',
                'db_table': 'library_libraryhall',
            },
        ),
        migrations.CreateModel(
            name='Reader',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Наименование')),
            ],
            options={
                'verbose_name': 'Читатель',
                'verbose_name_plural': 'Читатели',
                'db_table': 'library_reader',
            },
        ),
        migrations.CreateModel(
            name='TypePublication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True, verbose_name='Тип издания')),
            ],
            options={
                'verbose_name': 'Тип издания',
                'verbose_name_plural': 'Типы изданий',
                'db_table': 'library_typepublication',
            },
        ),
        migrations.CreateModel(
            name='Shelf',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=25, verbose_name='Наименование стеллажа')),
                ('hall', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shelfs', to='explain_task_1.libraryhall', verbose_name='Зал')),
            ],
            options={
                'verbose_name': 'Стеллаж',
                'verbose_name_plural': 'Стеллажи',
                'db_table': 'library_shelf',
            },
        ),
        migrations.CreateModel(
            name='ReaderTicket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='explain_task_1.bookcard', verbose_name='Книга')),
                ('reader', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='explain_task_1.reader', verbose_name='Читатель')),
            ],
            options={
                'verbose_name': 'Читательский билет',
                'verbose_name_plural': 'Читательские билеты',
                'db_table': 'library_readerticket',
            },
        ),
        migrations.CreateModel(
            name='Rack',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=25, verbose_name='Наименование полки')),
                ('shelf', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='racks', to='explain_task_1.shelf', verbose_name='Стеллаж')),
            ],
            options={
                'verbose_name': 'Полка',
                'verbose_name_plural': 'Полки',
                'db_table': 'library_rack',
            },
        ),
        migrations.CreateModel(
            name='BookStorage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.PositiveSmallIntegerField(verbose_name='Позиция книги на полке')),
                ('status', models.PositiveSmallIntegerField(choices=[('1', 'Доступна'), ('2', 'Отсутствует')], default='1', verbose_name='Статус')),
                ('book', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='explain_task_1.bookcard', verbose_name='Карточка')),
                ('hall', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='books', to='explain_task_1.libraryhall', verbose_name='Книжный зал')),
                ('rack', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='books', to='explain_task_1.rack', verbose_name='Номер полки')),
                ('shelf', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='books', to='explain_task_1.shelf', verbose_name='Номер стеллажа')),
            ],
            options={
                'verbose_name': 'Книга в наличии',
                'verbose_name_plural': 'Книги в наличии',
                'db_table': 'library_bookstorage',
            },
        ),
        migrations.CreateModel(
            name='BookMovementLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_issue', models.DateField(verbose_name='Дата выдачи книги')),
                ('date_return', models.DateField(null=True, verbose_name='Дата возврата книги')),
                ('status', models.PositiveSmallIntegerField(choices=[('1', 'Выдана'), ('2', 'Возвращена'), ('3', 'Перемещена')], verbose_name='Статус')),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='explain_task_1.bookstorage', verbose_name='Книга')),
                ('librarian', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='explain_task_1.librarian', verbose_name='Библиотекарь')),
                ('rack', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, to='explain_task_1.rack', verbose_name='Полка')),
                ('reader', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='explain_task_1.reader', verbose_name='Читатель')),
            ],
            options={
                'verbose_name': 'Журнал перемещения книг',
                'verbose_name_plural': 'Журнал перемещения книг',
                'db_table': 'library_bookmovementlog',
            },
        ),
        migrations.AddField(
            model_name='bookcard',
            name='type_publication',
            field=models.ManyToManyField(related_name='type_publications', to='explain_task_1.TypePublication', verbose_name='Тип издания'),
        ),
    ]
